{"version":3,"sources":["components/layouts/SignInLinks.js","store/actions/authActions.js","components/layouts/SignOutLinks.js","components/layouts/NavBar.js","components/dashboard/Notification.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","react_router_dom","to","href","onClick","profile","initials","SignOutLinks","state","console","log","firebase","links","uid","SignInLinks","layouts_SignOutLinks","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createAt","calendar","ProjectList","projects","projects_ProjectSummary","Dashboard","this","_this$props","projects_ProjectList","Notification","react_router","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","hadleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","class","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","layouts_NavBar","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.30bcc4fb.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signOut } from '../../store/actions/authActions'\n\nconst SignedInLinks = (props) => {\nreturn(\n    <ul className=\"right\">\n        <li><NavLink to='/create'>New Project</NavLink></li>\n        <li><a href='/signin' onClick={props.signOut}>Log Out</a></li>\n        <li><NavLink to='/' className='btn btn-floating cyan lighten-1'>\n            {props.profile.initials}\n            </NavLink></li>\n    </ul>\n)\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        signOut: () => dispatch(signOut())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            dispatch({type: 'LOGIN_SUCCESS'});\n        }).catch((err) => {\n            dispatch({type: 'LOGIN_ERROR', err});\n        })\n    }\n}\n\nexport const signOut = () => {\n    return( dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signOut().then(() => {\n            dispatch({ type: 'SIGNOUT_SUCCESS' });\n        });\n    }\n}\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n    \n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((resp) => {\n            return firestore.collection('users').doc(resp.user.uid).set({\n                firstName: newUser.firstName,\n                lastName: newUser.lastName,\n                initials: newUser.firstName[0] + newUser.lastName[0]\n            })\n        }).then(() => {\n            dispatch({ type: 'SIGNUP_SUCCESS'})\n        }).catch(err => {\n            dispatch({ type: 'SIGNUP_ERROR', err})\n        })\n    }\n}","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst SignOutLinks = () => {\nreturn(\n    <ul className=\"right\">\n        <li><NavLink to='/signup'>SignUp</NavLink></li>\n        <li><NavLink to='/signin'>Login</NavLink></li>\n    </ul>\n)\n}\n\nexport default SignOutLinks","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport SignInLinks from './SignInLinks'\nimport SignOutLinks from './SignOutLinks'\nimport { connect } from 'react-redux'\n\nconst NavBar = (props) => {\n    const { auth, profile } = props;\n    //console.log(auth);\nconst links = auth.uid ? <SignInLinks profile={profile}/> : <SignOutLinks />;\nreturn(\n<nav className=\"nav-wrapper grey darken-3\">      \n    <div className=\"container\">\n        <div className=\"left-align\">\n        <Link to='/' className=\"brand-logo\">SRplans</Link>\n        { links }\n        </div>\n    </div>\n</nav>\n)\n}\n\nconst mapStateToProps = (state) =>\n{\n  console.log(state);\n    return {\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n}\n\nexport default connect(mapStateToProps)(NavBar)","import React from 'react'\nimport moment from 'moment'\n\nconst Notifications = (props) => {\n    const {notifications} = props;\n    return (\n<div className=\"section\">\n    <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n            <span className=\"card-title\">Notifications</span>\n            <ul className=\"notifications\">\n                {notifications && notifications.map(item => {\n                    return (\n                        <li key={item.id}>\n                            <span className=\"cyan-text\">{item.user} </span>\n                            <span>{item.content}</span>\n                            <div className=\"grey-text note-date\">\n                                {moment(item.time.toDate()).fromNow()}\n                            </div>\n                        </li>\n                    )\n                })}\n            </ul>\n        </div>\n    </div>\n</div>\n    )\n}\n\nexport default  Notifications","import React from 'react'\nimport moment from 'moment'\n\nconst ProjectSummary = ({project}) => {\n\n    return (\n        <div className=\"card z-depth-0 project-summary\">\n        <div className=\"card-content grey-text text-darken-3\">\n            <span className=\"card-title\">{project.title}</span>\n            <p>Posted by the {project.authorFirstName} {project.authorLastName}</p>\n            <p className=\"grey-text\">{moment(project.createAt.toDate()).calendar()}</p>\n        </div>\n    </div>\n    )\n}\n\nexport default ProjectSummary","import React from 'react'\nimport ProjectSummary from './ProjectSummary'\nimport { Link } from 'react-router-dom'\n\n\nconst ProjectList = ({projects}) => {\n    return(\n        <div className=\"project-list section\">\n            { projects && projects.map(project => {\n                return(\n                    <Link to={'/project/' + project.id }  key={project.id}>\n                    <ProjectSummary project={project} />\n                    </Link>\n                )\n\n            })}\n        \n        </div>\n    )\n}\n\nexport default ProjectList","import React, {Component} from 'react'\nimport Notfications from './Notification'\nimport ProjectList from '../projects/ProjectList'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect} from 'react-router-dom'\n\nclass Dashboard extends Component{\n    render(){\n        console.log(this.props);\n        const { projects, auth, notifications } = this.props;\n        if(!auth.uid) return <Redirect to='/signin' />\n        return (\n            <div className=\"dashboard container\">\n                <div className=\"row\">\n                    <div className=\"col s12 m6\">\n                        <ProjectList projects={projects}/>\n                    </div>\n                    <div className=\"col s12 m5 offset-m1\">\n                    <Notfications notifications={notifications}/>\n                    </div>\n                </div>\n            \n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    console.log(state);\n    return{\n        projects: state.firestore.ordered.projects,\n        auth: state.firebase.auth,\n        notifications: state.firestore.ordered.notifications\n    }\n}\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect(() => [\n        { collection: 'projects', orderBy: ['createAt', 'desc'] },\n        {collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}\n     ])\n)(Dashboard)\n","    import React from 'react'\n    import { connect } from 'react-redux'\n    import { firestoreConnect} from 'react-redux-firebase'\n    import {compose} from 'redux'\n    import { Redirect } from 'react-router-dom'\n    import moment from 'moment'\n\n    const ProjectDetails = (props) => {\n       const { project, auth } = props;\n       if(!auth.uid) return <Redirect to='/signin' />\n       if (project) {\n            return(\n        <div className=\"container section project-details\">\n                \n                <div className=\"card z-depth-0\">\n                \n                    <div className=\"card-content\">\n                    \n                        <span className=\"card-title\">{ project.title }</span>\n                        <p>{ project.content }</p>\n                    </div>\n                    \n                    <div className=\"card-action grey lighten-4 grey-text\">\n                        \n                        <div>Posted By { project.authorFirstName } { project.authorLastName }</div>\n                        <div>{moment(project.createAt.toDate()).calendar()}</div>\n                        \n                    </div>\n                \n                </div>\n            </div>\n            )\n       }\n       else{\n        return (\n    <div className=\"container center\">\n        <p>Loading project....</p>\n    </div>\n        )\n       }\n    }\n\n    const mapStateToProps = (state, ownProps) => {\n        console.log(state)\n        const id = ownProps.match.params.id;\n        const projects = state.firestore.data.projects;\n        const project = projects ? projects[id] : null\n        \n        return{\n            project: project,\n            auth: state.firebase.auth\n        }\n    }\n\n    export default compose(\n        connect(mapStateToProps),\n        firestoreConnect([\n            { collection: 'projects' }\n        ])\n    )(ProjectDetails)","import React, {Component} from 'react'\nimport { connect } from 'react-redux'\nimport { signIn } from '../../store/actions/authActions'\nimport { Redirect } from 'react-router-dom'\n\nclass SignIn extends Component {\n    state = {\nemail: '',\npassword: ''\n\n    }\n    handleChange = (e) => {\n        this.setState({\n        [e.target.id]: e.target.value\n        })\n    }\n    hadleSubmit = (e) => {\n       e.preventDefault();\n       this.props.signIn(this.state);\n    }\n    render(){\n        const { authError, auth } = this.props;\n        if (auth.uid) return <Redirect to='/' />\n        return (\n            <div className=\"container\">\n                <div className=\"left-align\">\n                <form onSubmit={this.hadleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn cyan lighten-1 z-depth-0\">Login</button>\n                        <div className=\"red-text center\">\n                            { authError ? <p>{authError}</p> : null }\n\n                        </div>\n                    </div>\n                </form>\n                </div>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return{\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        signIn: (creds) => dispatch(signIn(creds))\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(SignIn)","import React, {Component} from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signUp } from '../../store/actions/authActions'\n\n\nclass SignUp extends Component {\n    state = {\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: ''\n\n    }\n    handleChange = (e) => {\n        this.setState({\n        [e.target.id]: e.target.value\n        })\n    }\n    hadleSubmit = (e) => {\n       e.preventDefault();\n       this.props.signUp(this.state)\n    }\n    render(){\n        const { auth, authError } = this.props;\n        if (auth.uid) return <Redirect to='/' />\n        return (\n            <div className=\"container\">\n                <div class=\"left-align\">\n                <form onSubmit={this.hadleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"firstName\">First Name</label>\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"lastName\">Last Name</label>\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn cyan lighten-1 z-depth-0\">Sign up</button>\n                        <div className=\"red-text center\">\n                            { authError ? <p>{ authError }</p> : null }\n                        </div>\n                    </div>\n                </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        signUp: (newUser) => dispatch(signUp(newUser))\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)","import React, {Component} from 'react'\nimport { connect } from 'react-redux'\nimport { createProject } from '../../store/actions/projectActions'\nimport { Redirect } from 'react-router-dom'\n\n\nclass CreateProject extends Component {\n    state = {\n        title: '',\n        content: ''\n\n    }\n    handleChange = (e) => {\n        this.setState({\n        [e.target.id]: e.target.value\n        })\n    }\n    hadleSubmit = (e) => {\n       e.preventDefault();\n       this.props.createProject(this.state)\n       this.props.history.push('/');\n    }\n    render(){\n        const { auth } = this.props;\n        if(!auth.uid) return <Redirect to='/signin' />\n        return (\n            <div className=\"container\">\n                <div className=\"left-align\">\n                <form onSubmit={this.hadleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\"> Create New Project</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"title\">Title</label>\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"content\">Project Content</label>\n                        <textarea  id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn cyan lighten-1 z-depth-0\">Create</button>\n                    </div>\n                </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        createProject: (project) => dispatch(createProject(project))\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)","export const createProject = (project) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        // make sync call to database\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile;\n        const authorId = getState().firebase.auth.uid;\n        firestore.collection('projects').add({\n            ...project,\n            authorFirstName: profile.firstName,\n            authorLastName: profile.lastName,\n            authorId: authorId,\n            createAt: new Date()\n        }).then(() => {\n            dispatch({ type: 'CREATE_PROJECT', project });\n        }).catch((err) => {\n            dispatch({ type: 'CREATE_PROJECT_ERROR', err });\n        })\n        \n    }\n};","import React, {Component} from 'react';\n//import logo, { ReactComponent } from './logo.svg';\nimport './App.css';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport NavBar from './components/layouts/NavBar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\n\n\nclass App extends Component{\n  render () {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n        <NavBar />\n        <Switch>\n          <Route exact path='/' component={Dashboard} />\n          <Route path='/project/:id' component={ProjectDetails} />\n          <Route path='/signin' component={SignIn} />\n          <Route path='/signup' component={SignUp} />\n          <Route path='/create' component={CreateProject} />\n        </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n/*\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React Hello World\n        </a>\n      </header>\n    </div>\n  );\n}*/\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n    authError: null\n}\n\nconst authReducer = (state = initState, action) => {\nswitch(action.type){\n    case 'LOGIN_ERROR':\n        console.log('login error');\n        return {\n        ...state,\n        authError: 'Login failed'\n    }\n    case 'LOGIN_SUCCESS':\n        console.log('login success');\n        return {\n        ...state,\n        authError: null\n    }\n    case 'SIGNOUT_SUCCESS':\n        console.log('signout success');\n        return state;\n    case 'SIGNUP_SUCCESS':\n        console.log('signup success');\n        return {\n            ...state,\n            authError: null\n        }\n    case 'SIGNUP_ERROR':\n        console.log('signup error');\n        return {\n            ...state,\n            authError: action.err.message\n        }\n    default:\n        return state;\n}\n}\n\nexport default authReducer","const initState = {\n    projects: [\n        {id: '1', title: 'help me find peach', content: 'blah blah'},\n        {id: '2', title: 'collect all the stars', content: 'blah blah'},\n        {id: '3', title: 'egg hunt with yoshi', content: 'blah blah'}\n    ]\n}\n\nconst projectReducer = (state = initState, action) => {\n    switch (action.type){\n        case 'CREATE_PROJECT':\n            console.log('created project', action.project);\n            return state;\n            case 'CREATE_PROJECT_ERROR':\n                console.log('create project error', action.err);\n                return state;\n            default:\n                return state;\n    }\n}\n\nexport default projectReducer","import authReducer from './authReducer'\nimport projectReducer from './projectReducer'\nimport { combineReducers } from 'redux'\nimport { firestoreReducer } from 'redux-firestore'\nimport { firebaseReducer } from 'react-redux-firebase'\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n});\n\nexport default rootReducer","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n//import { exportDefaultDeclaration } from '@babel/types';\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n    apiKey: \"AIzaSyCh8e2fwqutFVKcu2g3uOv58FhPMXaYQ_U\",\n    authDomain: \"srplans-b9bb9.firebaseapp.com\",\n    databaseURL: \"https://srplans-b9bb9.firebaseio.com\",\n    projectId: \"srplans-b9bb9\",\n    storageBucket: \"\",\n    messagingSenderId: \"453453338682\",\n    appId: \"1:453453338682:web:35cdb4c2c1e56bc3\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  firebase.firestore().settings({ timestampsInSnapshots: true });\n\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\n\n\nconst store = createStore(rootReducer, \n    compose(\n        applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n        reduxFirestore(fbConfig),\n        reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true})\n    \n        )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n    // If you want your app to work offline and load faster, you can change\n    // unregister() to register() below. Note this comes with some pitfalls.\n    // Learn more about service workers: https://bit.ly/CRA-PWA\n    serviceWorker.unregister();\n    \n})\n"],"sourceRoot":""}